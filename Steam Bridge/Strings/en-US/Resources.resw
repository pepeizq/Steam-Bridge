<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add.Text" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Add2" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddGames.Text" xml:space="preserve">
    <value>Add to Steam</value>
  </data>
  <data name="AddGamesWarning.Text" xml:space="preserve">
    <value>Steam must be closed</value>
  </data>
  <data name="Bridge" xml:space="preserve">
    <value>Bridge</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="ConfigBlizzardMessage.Text" xml:space="preserve">
    <value>Add the folder where are installed the games (example C:\Blizzard App\Games)</value>
  </data>
  <data name="ConfigGOGGalaxyMessage.Text" xml:space="preserve">
    <value>Add the folder where are installed the games (example C:\GalaxyClient\Games)</value>
  </data>
  <data name="ConfigOriginMessage.Text" xml:space="preserve">
    <value>Add the folder C:\ProgramData\Origin\LocalContent (may be hidden)</value>
  </data>
  <data name="ConfigReset.Text" xml:space="preserve">
    <value>Reset Configuration</value>
  </data>
  <data name="ConfigSteamMessage.Text" xml:space="preserve">
    <value>Before you can add in Steam the shortcuts you must indicate where it is installed (example: C:\Steam)</value>
  </data>
  <data name="ConfigSteamMessage2.Text" xml:space="preserve">
    <value>Now configure the clients you have installed</value>
  </data>
  <data name="ConfigSteamOverlayMessage.Text" xml:space="preserve">
    <value>Steam Overlay: This option is used to keep the Steam Overlay on other clients, but it is not perfect and can fail. Select one mode and try:</value>
  </data>
  <data name="ConfigTwitchMessage.Text" xml:space="preserve">
    <value>Add the folder C:\Users\[Your User]\AppData\Roaming\Twitch</value>
  </data>
  <data name="ConfigUplayMessage1.Text" xml:space="preserve">
    <value>Add the folder where Uplay is installed (example C:\Program Files\Ubisoft Game Launcher\)</value>
  </data>
  <data name="ConfigUplayMessage2.Text" xml:space="preserve">
    <value>Add the folder where are installed the games (example C:\Ubisoft Game Launcher\Games)</value>
  </data>
  <data name="ConfigWindowsStoreMessage.Text" xml:space="preserve">
    <value>Add the folder C:\Program Files\WindowsApps (you must have read permissions)</value>
  </data>
  <data name="ConfigWindowsStoreTutorial.Content" xml:space="preserve">
    <value>Tutorial to get permissions</value>
  </data>
  <data name="MessageBridge.Text" xml:space="preserve">
    <value>Select a platform</value>
  </data>
  <data name="MoreThings" xml:space="preserve">
    <value>More Things</value>
  </data>
  <data name="MoreThings_Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="MoreThings_Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="MoreThings_HelpTranslate" xml:space="preserve">
    <value>Help to Translate</value>
  </data>
  <data name="MoreThings_MoreApps" xml:space="preserve">
    <value>More Apps</value>
  </data>
  <data name="MoreThings_ReportBug" xml:space="preserve">
    <value>Report a Bug</value>
  </data>
  <data name="MoreThings_SourceCode" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="MoreThings_VoteApp" xml:space="preserve">
    <value>Vote the App</value>
  </data>
  <data name="NoGames.Text" xml:space="preserve">
    <value>No games detected</value>
  </data>
  <data name="NoSteam.Text" xml:space="preserve">
    <value>Steam not detected</value>
  </data>
  <data name="OtherOptions.Text" xml:space="preserve">
    <value>Other Options</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>The game has been added to Steam</value>
  </data>
  <data name="Success2" xml:space="preserve">
    <value>The games have been added in Steam</value>
  </data>
</root>