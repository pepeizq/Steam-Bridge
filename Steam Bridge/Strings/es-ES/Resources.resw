<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add.Text" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="Add2" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="AddGames.Text" xml:space="preserve">
    <value>Añadir Juegos</value>
  </data>
  <data name="AddGamesWarning.Text" xml:space="preserve">
    <value>Steam debe estar cerrado</value>
  </data>
  <data name="Bridge" xml:space="preserve">
    <value>Bridge</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Cambiar</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="ConfigBlizzardMessage.Text" xml:space="preserve">
    <value>Añade la carpeta donde están instalados los juegos (ejemplo C:\Blizzard App\Games)</value>
  </data>
  <data name="ConfigGOGGalaxyMessage.Text" xml:space="preserve">
    <value>Añade la carpeta donde están instalados los juegos (ejemplo C:\GalaxyClient\Games)</value>
  </data>
  <data name="ConfigOriginMessage.Text" xml:space="preserve">
    <value>Añade la carpeta C:\ProgramData\Origin\LocalContent (puede estar oculta)</value>
  </data>
  <data name="ConfigReset.Text" xml:space="preserve">
    <value>Resetear Configuración</value>
  </data>
  <data name="ConfigSteamMessage.Text" xml:space="preserve">
    <value>Antes de poder añadir en Steam los accesos directos debes indicar donde está instalado (ejemplo: C:\Steam)</value>
  </data>
  <data name="ConfigSteamMessage2.Text" xml:space="preserve">
    <value>Ahora configura los clientes que tengas instalados</value>
  </data>
  <data name="ConfigSteamOverlayMessage.Text" xml:space="preserve">
    <value>Steam Overlay: Esta opción sirve para conservar el Steam Overlay en otros clientes, pero no es perfecta y puede dar fallos. Selecciona un modo y prueba:</value>
  </data>
  <data name="ConfigTwitchMessage.Text" xml:space="preserve">
    <value>Añade la carpeta C:\Users\[Tu Usuario]\AppData\Roaming\Twitch</value>
  </data>
  <data name="ConfigUplayMessage1.Text" xml:space="preserve">
    <value>Añade la carpeta donde Uplay está instalado (ejemplo C:\Archivos de Programa\Ubisoft Game Launcher\)</value>
  </data>
  <data name="ConfigUplayMessage2.Text" xml:space="preserve">
    <value>Añade la carpeta donde están instalados los juegos (ejemplo C:\Ubisoft Game Launcher\Games)</value>
  </data>
  <data name="ConfigWindowsStoreMessage.Text" xml:space="preserve">
    <value>Añade la carpeta C:\Archivos de Programa\WindowsApps (debes de tener permisos de lectura)</value>
  </data>
  <data name="ConfigWindowsStoreTutorial.Content" xml:space="preserve">
    <value>Tutorial para obtener permisos</value>
  </data>
  <data name="Contact.Text" xml:space="preserve">
    <value>Contactar</value>
  </data>
  <data name="HelpTranslate.Text" xml:space="preserve">
    <value>Ayuda a Traducir</value>
  </data>
  <data name="MessageBridge.Text" xml:space="preserve">
    <value>Selecciona un cliente de la barra izquierda si lo tienes configurado</value>
  </data>
  <data name="MoreThings" xml:space="preserve">
    <value>Más Cosas</value>
  </data>
  <data name="NoGames.Text" xml:space="preserve">
    <value>No se han detectado juegos</value>
  </data>
  <data name="NoSteam" xml:space="preserve">
    <value>Steam no detectado</value>
  </data>
  <data name="OtherApps.Text" xml:space="preserve">
    <value>Otras Apps</value>
  </data>
  <data name="OtherOptions.Text" xml:space="preserve">
    <value>Otras Opciones</value>
  </data>
  <data name="ReportBug.Text" xml:space="preserve">
    <value>Informa de un Fallo</value>
  </data>
  <data name="SourceCode.Text" xml:space="preserve">
    <value>Código Fuente</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>El juego ha sido añadido en Steam</value>
  </data>
  <data name="Success2" xml:space="preserve">
    <value>Los juegos han sido añadidos en Steam</value>
  </data>
  <data name="ThanksTo.Text" xml:space="preserve">
    <value>Agradecimientos</value>
  </data>
  <data name="VoteApp.Text" xml:space="preserve">
    <value>Vota la App</value>
  </data>
</root>